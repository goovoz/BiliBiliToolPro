name: Publish image

on:
  release:
    types: [published]

env:
  DOCKERHUB_USERNAME : ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD : ${{ secrets.DOCKERHUB_PASSWORD }}
  IMAGE_NAME: bilibilitoolpro

jobs:
  CheckDockerToken:
    runs-on: ubuntu-latest
    outputs:
      hasToken: ${{ steps.step_one.outputs.hasToken }}
    steps:
      - name: Set the value
        id: step_one
        run: |
          if [ "$DOCKERHUB_PASSWORD" ] ; then
            echo "::set-output name=hasToken::true"
          else
            echo "::set-output name=hasToken::false"
          fi
      - name: Check the value
        run: |
          echo ${{ steps.step_one.outputs.hasToken }}
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REF#refs/tags/: ${GITHUB_REF#refs/tags/}"
        
  Publish2DockerHub:
    runs-on: ubuntu-latest
    needs: CheckDockerToken
    if: "contains(needs.CheckDockerToken.outputs.hasToken, 'true')"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - 
        name: GetTagName
        id: getTag
        run: |
          DOCKER_IMAGE_TAG="${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
          echo "docker image tag: $DOCKER_IMAGE_TAG"
          echo "::set-output name=tag::$DOCKER_IMAGE_TAG"
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.getTag.outputs.tag }}
          
      - 
        name: Sync Readme
        uses: ms-jpq/sync-dockerhub-readme@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}
          readme: "./Readme.md" 
